#Install of VTNerds Monero-LWS for PiNodeXMR for Raspberry Pi

###Build

{

#Check dependencies (Should be installed already from Monero install)
sudo apt update && sudo apt install build-essential cmake libboost-all-dev libssl-dev libzmq3-dev doxygen graphviz -y

#Clone monero-lws
git clone --recursive https://github.com/vtnerd/monero-lws.git

cd monero-lws
git checkout develop
mkdir build && cd build
cmake -DMONERO_SOURCE_DIR=/home/pinodexmr/monero -DMONERO_BUILD_DIR=/home/pinodexmr/monero/build/release ..

##An Edit is required to CMakeLists.txt as the Raspberry Pi kernel seems to mishandle libatomic

nano /home/pinodexmr/monero-lws/CMakeLists.txt

##Add the following to line 74
set(CMAKE_CXX_LINK_FLAGS "${CMAKE_CXX_LINK_FLAGS} -latomic")

##Continue install as normal (approx <10mins Pi4):
make

}

###Generate self-signed SSL certs as MyMonero is https only:

{

mkdir ~/lwsSslCert && cd lswSslCert

curl -sS https://raw.githubusercontent.com/antelle/generate-ip-cert/master/generate-ip-cert.sh | bash -s $(hostname -I)

## A copy of the generated ~/lswSslCert/cert.pem must be added to (windows) "LocalComputer\Trusted Root Certification Authorities\Certificates" to allow secure link between Windows MyMonero desktop and Monero-LWS service of PiNodeXMR IP.

##If required for Android devices the following can generate the cert+keys .p12 file for import on to phone.

openssl pkcs12 -export -in ~/lswSslCert/cert.pem -inkey ~/lswSslCert/key.pem -out androidCert.p12


}

###Usage: [ In examples below replace any values shown within the '<>' symbols. Also remove the '<' and '>'. "" should be left in place and are required.]

##Start daemon: (daemon listens to your monero node on ZMC port 18082 to interact with blockchain) 

/home/pinodexmr/monero-lws/build/src/monero-lws-daemon --rest-server "https://<PiNodeXMR-IP>:8443" --confirm-external-bind --rest-ssl-key=/home/pinodexmr/lswSslCert/key.pem --rest-ssl-certificate=/home/pinodexmr/lswSslCert/cert.pem


##Start LWS Admin with: (admin is used to manage Address+View Key in database. On first start it will monitor for new tx from current height)
/home/pinodexmr/monero-lws/build/src/monero-lws-admin add_account <address> <view_key>

##Rescan address: (Tell lws-admin to rescan from block <0> (change as required) for tx belonging to address and continue to monitor)
/home/pinodexmr/monero-lws/build/src/monero-lws-admin rescan 0 <address>

##(Optional) After some time, once blocks have scanned a local request can be made to check balance
curl -w "\n" -X POST http://<device-ip>:8443/get_address_info -d '{"address": "<address>", "view_key": "<key>"}'  -H 'Content-Type: application/json'

##Connection using MyMonero wallet to <PiNodeXMR-IP>:8443 as custom server should be possible and perform the function of lightwallet as expected (But I can't test OpenMonero as I don't have an IOS device)




##(Optional) Create Monero-LWS systemd service:

sudo nano /etc/systemd/system/monero-lws.service

##Add (change PiNodeXMR-IP to actual IP, remove <>)
[Unit]
Description=Monero LWS
After=network.target

[Service]
User=pinodexmr
Group=pinodexmr
ExecStart=/home/pinodexmr/monero-lws/build/src/monero-lws-daemon --rest-server "https://<PiNodeXMR-IP>:8443" --confirm-external-bind --rest-ssl-key=/home/pinodexmr/lswSslCert/key.pem --rest-ssl-certificate=/home/pinodexmr/lswSslCert/cert.pem
Restart=always

[Install]
WantedBy=multi-user.target

##Save and exit

##Load systemd changes
sudo systemctl daemon-reload

#Start Monero-LWS service
sudo systemctl start monero-lws

#(optional) Run Monero-LWS on boot
sudo systemctl enable monero-lws 





##(Optional) Add Monero-LWS to PiNodeXMR WebUI system status for easy monitor
	
nano /home/pinodexmr/system-monitor.sh

##Add line
    echo -n "Monero-LWS  : " && sudo systemctl status monero-lws.service | sed -n '3'p | cut -c11-;